<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.platform.dao.ApiCommentMapper">

    <!-- 可根据自己的需求，是否要使用 -->
    <resultMap type="com.platform.entity.CommentVo" id="commentMap">
        <result property="id" column="id"/>
        <result property="typeId" column="type_id"/>
        <result property="value_id" column="value_id"/>
        <result property="content" column="content"/>
        <result property="add_time" column="add_time"/>
        <result property="status" column="status"/>
        <result property="user_id" column="user_id"/>
        <result property="stroeid" column="stroe_id"/>
        <result property="grade" column="grade"/>
        <result property="orderid" column="order_id"/>
        <result property="pic_url" column="pic_url"/>
        <result property="goodsnamm" column="goods_name"/>
        <result property="username" column="username"/>
        <result property="goodsid" column="goods_id"/>
    </resultMap>

    <select id="queryObject" resultMap="commentMap">
		select * from nideshop_comment where id = #{value}
	</select>

    <select id="queryList" resultMap="commentMap">
        select distinct c.*,a.goods_name,d.username from nideshop_comment c
        left join nideshop_comment_picture cp on cp.comment_id = c.id
        left join nideshop_order_goods  a on a.order_id=c.order_id
        LEFT join nideshop_stroe b on b.id=c.stroe_id
        left join nideshop_user d on c.user_id=d.id
        where 1 = 1
        <if test="typeId != null and typeId != ''">
            and c.type_id = #{typeId}
        </if>
        <if test="value_id != null and value_id != ''">
            and c.value_id = #{value_id}
        </if>
        <if test="orderid != null ">
            and c.order_id = #{orderid}
        </if>
        <if test="grade !=null ">
            and c.grade > 3
        </if>
        <if test="grader !=null ">
            and c.grade &lt; 3
        </if>
        <if test="goodsid !=null">
            and c.goods_id=#{goodsid}
        </if>
        <if test="stroeid !=null">
            and c.stroe_id=#{stroeid}
        </if>
        <if test="user_id != null and user_id != ''">
            and c.user_id = #{user_id}
        </if>
        <if test="hasPic != null and hasPic==3">
            and cp.id is not null
        </if>
        <choose>
            <when test="sidx != null and sidx.trim() != ''">
                order by ${sidx} ${order}
            </when>
            <otherwise>
                order by c.id desc
            </otherwise>
        </choose>
        <if test="offset != null and limit != null">
            limit #{offset}, #{limit}
        </if>
    </select>

    <select id="queryTotal" resultType="int">
        select count(c.id) from nideshop_comment c
        where 1= 1
        <if test="typeId != null and typeId != ''">
            and c.type_id = #{typeId}
        </if>
        <if test="goodsid !=null">
            and c.goods_id=#{goodsid}
        </if>
        <if test="stroeid !=null">
            and stroe_id=#{stroeid}
        </if>
        <if test="grade !=null ">
            and c.grade > 3
        </if>
        <if test="grader !=null ">
            and c.grade &lt; 3
        </if>
    </select>
    <select id="avgGrade" resultType="double">
        select AVG(grade) from nideshop_comment
        where 1=1
        <if test="stroeid !=null">
            and stroe_id=#{stroeid}
        </if>
    </select>
    <select id="queryhasPicTotal" resultType="int">
        select count(distinct c.id) from nideshop_comment c
        left join nideshop_comment_picture cp on cp.comment_id = c.id
        where 1= 1 and cp.id > 0
        <if test="typeId != null and typeId != ''">
            and c.type_id = #{typeId}
        </if>
        <if test="hasPic != null and hasPic==3">
            and cp.id is not null
        </if>
    </select>

    <insert id="save" parameterType="com.platform.entity.CommentVo" useGeneratedKeys="true" keyProperty="id">
		insert into nideshop_comment
		(
			`type_id`, 
			`value_id`, 
			`content`, 
			`add_time`, 
			`status`, 
			`user_id`,
			stroe_id,
			grade,
			order_id,
			goods_id
		)
		values
		(
			#{typeId},
			#{value_id},
			#{content},
			#{add_time},
			#{status},
			#{user_id},
			#{stroeid},
			#{grade},
			#{orderid},
			#{goodsid}
		)
	</insert>

    <update id="update" parameterType="com.platform.entity.CommentVo">
        update nideshop_comment
        <set>
            <if test="typeId != null">`type_id` = #{typeId},</if>
            <if test="value_id != null">`value_id` = #{value_id},</if>
            <if test="content != null">`content` = #{content},</if>
            <if test="add_time != null">`add_time` = #{add_time},</if>
            <if test="status != null">`status` = #{status},</if>
            <if test="user_id != null">`user_id` = #{user_id},</if>
            <if test="stroeid !=null">stroe_id=#{stroeid},</if>
            <if test="grade !=null">grade=#{grade},</if>
            <if test="orderid !=null ">order_id=#{orderid}</if>
        </set>
        where id = #{id}
    </update>

    <delete id="delete">
		delete from nideshop_comment where id = #{value}
	</delete>

    <delete id="deleteBatch">
        delete from nideshop_comment where id in
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>

</mapper>