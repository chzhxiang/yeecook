<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.platform.dao.JobDao">

    <resultMap type="com.platform.entity.JobEntity" id="jobMap">
        <result property="id" column="id"/>
        <result property="jobTitle" column="job_title"/>
        <result property="jobInfo" column="job_info"/>
		<result property="jobRequire" column="job_require"/>
        <result property="jobCategory" column="job_category"/>
        <result property="releaseTime" column="release_time"/>
        <result property="deptId" column="dept_id"/>
        <result property="deptName" column="dept_name"/>
        <result property="isRelease" column="is_release"/>
        <result property="createUser" column="create_user"/>
        <result property="isStatus" column="is_status"/>
    </resultMap>

	<select id="queryMessage" resultType="com.platform.entity.JobEntity">
		select * from nideshop_job
	</select>
	<select id="queryObject" resultType="com.platform.entity.JobEntity">
		select
			`id`,
			`job_title`,
			`job_info`,
			`job_require`,
			`job_category`,
			`release_time`,
			`dept_id`,
			`dept_name`,
			`is_release`,
			`create_user`,
			`is_status`
		from nideshop_job
		where id = #{id}
	</select>

	<select id="queryList" resultType="com.platform.entity.JobEntity">
		select
    		`id`,
    		`job_title`,
    		`job_info`,
		    `job_require`,
    		`job_category`,
    		`release_time`,
    		`dept_id`,
    		`dept_name`,
    		`is_release`,
    		`create_user`,
    		`is_status`
		from nideshop_job
		WHERE 1=1
		<if test="name != null and name.trim() != ''">
			AND name LIKE concat('%',#{name},'%')
		</if>
        <choose>
            <when test="sidx != null and sidx.trim() != ''">
                order by ${sidx} ${order}
            </when>
			<otherwise>
                order by id
			</otherwise>
        </choose>
		<if test="offset != null and limit != null">
			limit #{offset}, #{limit}
		</if>
	</select>
	
 	<select id="queryTotal" resultType="int">
		select count(*) from nideshop_job
		WHERE 1=1
        <if test="name != null and name.trim() != ''">
            AND name LIKE concat('%',#{name},'%')
        </if>
	</select>
	 
	<insert id="save" parameterType="com.platform.entity.JobEntity" useGeneratedKeys="true" keyProperty="id">
		insert into nideshop_job(
			`job_title`,
			`job_info`,
			`job_require`,
			`job_category`,
			`release_time`,
			`dept_id`,
			`dept_name`,
			`is_release`,
			`create_user`,
			`is_status`)
		values(
			#{jobTitle},
			#{jobInfo},
			#{jobRequire},
			#{jobCategory},
			#{releaseTime},
			#{deptId},
			#{deptName},
			#{isRelease},
			#{createUser},
			#{isStatus})
	</insert>
	 
	<update id="update" parameterType="com.platform.entity.JobEntity">
		update nideshop_job 
		<set>
			<if test="jobTitle != null">`job_title` = #{jobTitle}, </if>
			<if test="jobInfo != null">`job_info` = #{jobInfo}, </if>
			<if test="jobRequire != null">`job_require` = #{jobRequire}, </if>
			<if test="jobCategory != null">`job_category` = #{jobCategory}, </if>
			<if test="releaseTime != null">`release_time` = #{releaseTime}, </if>
			<if test="deptId != null">`dept_id` = #{deptId}, </if>
			<if test="deptName != null">`dept_name` = #{deptName}, </if>
			<if test="isRelease != null">`is_release` = #{isRelease}, </if>
			<if test="createUser != null">`create_user` = #{createUser}, </if>
			<if test="isStatus != null">`is_status` = #{isStatus}</if>
		</set>
		where id = #{id}
	</update>
	
	<delete id="delete">
		delete from nideshop_job where id = #{value}
	</delete>
	
	<delete id="deleteBatch">
		delete from nideshop_job where id in 
		<foreach item="id" collection="array" open="(" separator="," close=")">
			#{id}
		</foreach>
	</delete>

</mapper>